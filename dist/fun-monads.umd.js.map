{"version":3,"file":"fun-monads.umd.js","sources":["../src/Option/index.ts"],"sourcesContent":["'use strict'\n\n/**\n * Class `None<A>` represents non-existent values of type `A`.\n *\n * ```typescript\n * const s: None<any> = new None<any>()\n * const t: None<any> = Option.none\n * const u: None<any> = Option(null)\n * const v: None<any> = Option(undefined)\n * const w: None<any> = Option.some(null)\n * const x: None<any> = Option.some(undefined)\n * const y: None<any> = Option.apply(null)\n * const z: None<any> = Option.apply(undefined)\n * ```\n */\nexport class None<A> {\n  readonly type: string = 'None'\n\n  /**\n   * Returns true if the option is None, false otherwise.\n   */\n  isNone(): boolean {\n    return true\n  }\n\n  /**\n   * Returns true if the option is an instance of Some, false otherwise.\n   */\n  isSome(): boolean {\n    return false\n  }\n\n  /**\n   * isEmpty is a convenience shortcut to {@link isNone}\n   */\n  isEmpty = this.isNone\n\n  /**\n   * isSome is a convenience shortcut to {@link isSome}\n   */\n  isDefined = this.isSome\n\n  /**\n   * get throws an Error if this is a None\n   */\n  get(): A {\n    throw new Error('Unsupported operation None.get')\n  }\n\n  /** Returns a Some containing the result of applying $f to this $option's\n   * value if this $option is nonempty.\n   * Otherwise return $none.\n   *\n   *  ```typescript\n   *  const f = (x:number): number => x * 2;\n   *  const o = Option<number>(5)\n   *  const result = o.map(f).getOrElse(-1) // 10\n   *  ```\n   *\n   *  @note This is similar to `flatMap` except here,\n   *  $f does not need to wrap its result in an $option.\n   *\n   *  @see {@link flatMap}\n   *  @see {@link forEach}\n   */\n  map<B>(f: (a: A) => B): Option<B> {\n    return new None<B>()\n  }\n\n  /** Returns the result of applying $f to this Option's value if\n   * this Option is nonempty.\n   * Returns None if this Option is empty.\n   * Slightly different from `map` in that $f is expected to\n   * return an Option (which could be None).\n   *\n   *  ```typescript\n   *  const f = (x:number) => Option(undefined);\n   *  const o = Option<number>(5)\n   *  const result = o.flatMap(f).getOrElse(-1) // -1\n   *  ```\n   *\n   *  @param  f   the function to apply\n   *  @return Returns None in all cases\n   *  @see {@link map}\n   *  @see {@link forEach}\n   */\n  flatMap<B>(f: (a: A) => Option<B>): Option<B> {\n    return new None<B>()\n  }\n\n  getOrElse(x: A): A {\n    return x\n  }\n\n  flatten(): Option<A> {\n    return new None<A>()\n  }\n\n  orElse<B>(b: Option<B>): Option<A> | Option<B> {\n    return b\n  }\n\n  toList(): A[] {\n    return []\n  }\n\n  ap<B>(fa: Option<(a: A) => B>): Option<B> {\n    return new None<B>()\n  }\n\n  filter(p: (a: A) => boolean): Option<A> {\n    return new None<A>()\n  }\n\n  has(p: (a: A) => boolean): boolean {\n    return false\n  }\n\n  exists = this.has\n\n  forEach(fn: (a: A) => any): void {\n    // noop\n  }\n\n}\n\n\n/**\n * Class `Some<A>` represents existing values of type `A`.\n * Some never contains null or undefined.\n *\n * ```typescript\n * const a:any = \"anything\"\n * const b: Some<any> = new Some<any>(a)\n * const c: Some<any> = Option.some(a)\n * const d: Some<any> = Option(a)\n * const e: Some<any> = Option.some(a)\n * const f: Some<any> = Option.apply(a)\n * ```\n */\nexport class Some<A> {\n  readonly type: string = 'Some'\n  readonly value: A\n\n  constructor(value: A) {\n    this.value = value\n    if (this.value == null) {\n      throw new Error('null or undefined exception. Please use Option.apply')\n    }\n    return this\n  }\n\n  isNone(): boolean {\n    return false\n  }\n\n  isSome(): boolean {\n    return true\n  }\n\n  isEmpty = this.isNone\n  isDefined = this.isSome\n\n  get(): A {\n    return this.value\n  }\n\n  map<B>(f: (a: A) => B): Option<B> {\n    const res = f(this.value)\n    return res == null\n      ? new None<B>()\n      : new Some<B>(res)\n  }\n\n  flatMap<B>(f: (x: A) => Option<B>): Option<B> {\n    return f(this.value)\n  }\n\n  getOrElse(x: A): A {\n    return this.get()\n  }\n\n  flatten(): Option<A> {\n    if (this.value instanceof Option) {\n      return this.value as unknown as Option<A>\n    } else {\n      return this\n    }\n  }\n\n  orElse<B>(b: Option<B>): Option<A> | Option<B> {\n    return this\n  }\n\n  toList(): A[] {\n    return [this.get()]\n  }\n\n  ap<B>(fa: Option<(a: A) => B>): Option<B> {\n    return this.map<B>(fa.get())\n  }\n\n  filter(p: (a: A) => boolean): Option<A> {\n    return p(this.get())\n      ? this\n      : new None<A>()\n  }\n\n  has(p: (a: A) => boolean): boolean {\n    return p(this.get())\n  }\n\n  exists = this.has\n\n  forEach(fn: (a: A) => any): void {\n    fn(this.get())\n  }\n}\n\nexport type Option<A> = None<A> | Some<A>\n\nexport function Option<A>(value: A): Option<A> {\n  return Option.apply(value)\n}\n\nexport namespace Option {\n  export function none<A>(): Option<A> {\n    return new None<A>()\n  }\n\n  export const empty = none\n\n  export function some<A>(a: A): Option<A> {\n    return a == null ? new None<A>() : new Some(a)\n  }\n\n  export function apply<A>(a: A): Option<A> {\n    return some(a)\n  }\n\n  export function isSome<A>(fa: Option<A>): boolean {\n    return fa.isSome()\n  }\n\n  export function isNone<A>(fa: Option<A>): boolean {\n    return fa.isNone()\n  }\n\n  export const isEmpty = isNone\n  export const isDefined = isSome\n\n  export function get<A>(a: Option<A>): A {\n    return a.get()\n  }\n\n  export function map<A, B>(f: (x: A) => B, a: Option<A>): Option<B> {\n    return a.map(f)\n  }\n\n  export function flatMap<A, B>(f: (x: A) => Option<B>, a: Option<A>): Option<B> {\n    return a.flatMap(f)\n  }\n\n  export function getOrElse<A>(x: A, a: Option<A>): A {\n    return a.getOrElse(x)\n  }\n\n  export function flatten<A>(a: Option<Option<A>>): Option<A> {\n    return a.getOrElse(new None<A>())\n  }\n\n  export function ap<A, B>(f: Option<(a: A) => B>, a: Option<A>): Option<B> {\n    return a.ap(f)\n  }\n\n  export function filter<A>(p: (a: A) => boolean, a: Option<A>): Option<A> {\n    return a.filter(p)\n  }\n\n  export function has<A>(p: (a: A) => boolean, a: Option<A>): boolean {\n    return a.has(p)\n  }\n\n  export const exists = has\n\n  export function forEach<A>(f: (a: A) => any, a: Option<A>): void {\n    a.forEach(f)\n  }\n\n  export function orElse<A, B>(b: Option<B>, a: Option<A>): Option<A> | Option<B> {\n    return a.orElse(b)\n  }\n\n}\n\n\n\n\n"],"names":[],"mappings":"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"}