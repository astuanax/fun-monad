{"version":3,"file":"fun-monads.umd.js","sources":["../src/Option/index.ts","../src/Try/index.ts","../src/Reader/index.ts","../src/Either/index.ts"],"sourcesContent":["'use strict'\nimport Functor from '../Functor'\n\n/**\n * Class `None<A>` represents non-existent values of type `A`.\n *\n * ```typescript\n * const s: None<any> = new None<any>()\n * const t: None<any> = Option.none\n * const u: None<any> = Option(null)\n * const v: None<any> = Option(undefined)\n * const w: None<any> = Option.some(null)\n * const x: None<any> = Option.some(undefined)\n * const y: None<any> = Option.apply(null)\n * const z: None<any> = Option.apply(undefined)\n * ```\n */\nexport class None<A> implements Functor<A, any, Option<A>>{\n  readonly type: string = 'None'\n\n  /**\n   * Returns true if the option is None, false otherwise.\n   */\n  isNone: boolean = true\n\n  /**\n   * Returns true if the option is an instance of Some, false otherwise.\n   */\n  isSome: boolean = false\n\n  /**\n   * isEmpty is a convenience shortcut to {@link isNone}\n   */\n  isEmpty = this.isNone\n\n  /**\n   * isSome is a convenience shortcut to {@link isSome}\n   */\n  isDefined = this.isSome\n  exists = this.has\n\n  /**\n   * get throws an Error if this is a None\n   */\n  get(): A {\n    throw new Error('Unsupported operation None.get')\n  }\n\n  /** Returns a Some containing the result of applying $f to this $option's\n   * value if this $option is nonempty.\n   * Otherwise return $none.\n   *\n   *  ```typescript\n   *  const f = (x:number): number => x * 2;\n   *  const o = Option<number>(5)\n   *  const result = o.map(f).getOrElse(-1) // 10\n   *  ```\n   *\n   *  @note This is similar to `flatMap` except here,\n   *  $f does not need to wrap its result in an $option.\n   *\n   *  @see {@link flatMap}\n   *  @see {@link forEach}\n   */\n  map<B>(f: (a: A) => B): Option<B> {\n    return new None<B>()\n  }\n\n  /** Returns the result of applying $f to this Option's value if\n   * this Option is nonempty.\n   * Returns None if this Option is empty.\n   * Slightly different from `map` in that $f is expected to\n   * return an Option (which could be None).\n   *\n   *  ```typescript\n   *  const f = (x:number) => Option(undefined);\n   *  const o = Option<number>(5)\n   *  const result = o.flatMap(f).getOrElse(-1) // -1\n   *  ```\n   *\n   *  @param  f   the function to apply\n   *  @return Returns None in all cases\n   *  @see {@link map}\n   *  @see {@link forEach}\n   */\n  flatMap<B>(f: (a: A) => Option<B>): Option<B> {\n    return new None<B>()\n  }\n\n  getOrElse(x: A): A {\n    return x\n  }\n\n  flatten(): Option<A> {\n    return this\n  }\n\n  orElse<B>(b: Option<B>): Option<A> | Option<B> {\n    return b\n  }\n\n  toList(): A[] {\n    return []\n  }\n\n  ap<B>(fa: Option<(a: A) => B>): Option<B> {\n    return new None<B>()\n  }\n\n  filter(p: (a: A) => boolean): Option<A> {\n    return new None<A>()\n  }\n\n  has(p: (a: A) => boolean): boolean {\n    return false\n  }\n\n  forEach(fn: (a: A) => any): void {\n    // noop\n  }\n}\n\n/**\n * Class `Some<A>` represents existing values of type `A`.\n * Some never contains null or undefined.\n *\n * ```typescript\n * const a:any = \"anything\"\n * const b: Some<any> = new Some<any>(a)\n * const c: Some<any> = Option.some(a)\n * const d: Some<any> = Option(a)\n * const e: Some<any> = Option.some(a)\n * const f: Some<any> = Option.apply(a)\n * ```\n */\nexport class Some<A> implements Functor<A, any, Option<A>>{\n  readonly type: string = 'Some'\n  readonly value: A\n  isNone: boolean = false\n  isSome: boolean = true\n  isEmpty = this.isNone\n  isDefined = this.isSome\n  exists = this.has\n\n  constructor(value: A) {\n    this.value = value\n    if (this.value == null) {\n      throw new Error('null or undefined exception. Please use Option.apply')\n    }\n    return this\n  }\n\n  get(): A {\n    return this.value\n  }\n\n  map<B>(f: (a: A) => B): Option<B> {\n    const res = f(this.value)\n    return res == null ? new None<B>() : new Some<B>(res)\n  }\n\n  flatMap<B>(f: (x: A) => Option<B>): Option<B> {\n    return f(this.value)\n  }\n\n  getOrElse(x: A): A {\n    return this.get()\n  }\n\n  flatten(): Option<A> {\n    const v: Option<A> = (this.value as unknown) as Option<A>\n    if (v && (v.isSome || v.isNone)) {\n      return v\n    }\n    return this\n  }\n\n  orElse<B>(b: Option<B>): Option<A> | Option<B> {\n    return this\n  }\n\n  toList(): A[] {\n    return [this.get()]\n  }\n\n  ap<B>(fa: Option<(a: A) => B>): Option<B> {\n    return this.map<B>(fa.get())\n  }\n\n  filter(p: (a: A) => boolean): Option<A> {\n    return p(this.get()) ? this : new None<A>()\n  }\n\n  has(p: (a: A) => boolean): boolean {\n    return p(this.get())\n  }\n\n  forEach(fn: (a: A) => any): void {\n    fn(this.get())\n  }\n}\n\nexport type Option<A> = None<A> | Some<A>\n\nexport function Option<A>(value: A): Option<A> {\n  return Option.apply(value)\n}\n\n/* istanbul ignore next */\nexport namespace Option {\n\n  export function none<A>(): Option<A> {\n    return new None<A>()\n  }\n\n  export const empty = none\n\n  export function some<A>(a: A): Option<A> {\n    return a == null ? new None<A>() : new Some(a)\n  }\n\n  export function apply<A>(a: A): Option<A> {\n    return some(a)\n  }\n\n  export function of<A>(a: A): Option<A> {\n    return some(a)\n  }\n\n  export function isSome<A>(fa: Option<A>): boolean {\n    return fa.isSome\n  }\n\n  export function isNone<A>(fa: Option<A>): boolean {\n    return fa.isNone\n  }\n\n  export const isEmpty = isNone\n  export const isDefined = isSome\n\n  export function get<A>(a: Option<A>): A {\n    return a.get()\n  }\n\n  export function map<A, B>(f: (x: A) => B, a: Option<A>): Option<B> {\n    return a.map(f)\n  }\n\n  export function flatMap<A, B>(f: (x: A) => Option<B>, a: Option<A>): Option<B> {\n    return a.flatMap(f)\n  }\n\n  export function getOrElse<A>(x: A, a: Option<A>): A {\n    return a.getOrElse(x)\n  }\n\n  export function flatten<A>(a: Option<A>): Option<A> {\n    return a.flatten()\n  }\n\n  export function ap<A, B>(f: Option<(a: A) => B>, a: Option<A>): Option<B> {\n    return a.ap(f)\n  }\n\n  export function filter<A>(p: (a: A) => boolean, a: Option<A>): Option<A> {\n    return a.filter(p)\n  }\n\n  export function has<A>(p: (a: A) => boolean, a: Option<A>): boolean {\n    return a.has(p)\n  }\n\n  export const exists = has\n\n  export function forEach<A>(f: (a: A) => void, a: Option<A>): void {\n    a.forEach(f)\n  }\n\n  export function orElse<A, B>(b: Option<B>, a: Option<A>): Option<A> | Option<B> {\n    return a.orElse(b)\n  }\n}\n","'use strict'\n\nimport Functor from '../Functor'\n\nexport class Success<A> implements Functor<A, any, Try<A>>{\n  readonly type: string = 'Success'\n  readonly value: A\n  isSuccess: boolean = true\n  isFailure: boolean = false\n\n  constructor(value: A) {\n    this.value = value\n    return this\n  }\n\n  flatMap<B extends any>(f: (x: A) => Try<B>): Try<B> {\n    try {\n      return f(this.value)\n    } catch (err) {\n      return new Failure<B>(err)\n    }\n  }\n\n  map<B extends any>(f: (x: A) => B): Try<B> {\n    return Try.apply(() => f(this.value))\n  }\n\n  fold<B extends any>(f: (x: Error) => B, s: (x: A) => B): B {\n    return s(this.value)\n  }\n\n  get(): A {\n    return this.value\n  }\n\n  getOrElse<B extends any>(b: () => B): A | B {\n    return this.value\n  }\n\n  orElse<B extends any>(b: Try<B>): Try<A> | Try<B> {\n    return this\n  }\n\n  flatten(): Try<A> {\n    const v: Try<A> = (this.value as unknown) as Try<A>\n    if (v && (v.isSuccess || v.isFailure)) {\n      return v\n    }\n    return this\n  }\n\n  forEach(fn: (a: A) => any): void {\n    fn(this.get())\n  }\n\n  filter(p: (a: A) => boolean): Try<A> {\n    try {\n      return p(this.get())\n        ? this\n        : new Failure<A>(new Error('Predicate does not hold for value ' + this.value))\n    } catch (err) {\n      return new Failure<A>(err)\n    }\n  }\n\n  recover<B extends any>(pf: (x: Error) => Try<B>): Try<B> {\n    return new Success<B>((this.value as unknown) as B)\n  }\n\n  failed(): Try<A> | Try<Error> {\n    return new Failure<A>(new Error('Unsupported operation. Success failed'))\n  }\n\n  ap<B extends any>(fa: Try<(a: A) => B>): Try<B> {\n    return this.map<B>(fa.get())\n  }\n}\n\nexport class Failure<A> implements Functor<A, any, Try<A>>{\n  readonly type: string = 'Failure'\n  readonly value: Error\n  isSuccess: boolean = false\n  isFailure: boolean = true\n\n  constructor(value: Error) {\n    this.value = value\n    return this\n  }\n\n  flatMap<B extends any>(f: (x: A) => Try<B>): Try<B> {\n    return new Failure<B>(this.value)\n  }\n\n  map<B extends any>(f: (x: A) => B): Try<B> {\n    return new Failure<B>(this.value)\n  }\n\n  fold<B extends any>(f: (x: Error) => B, s: (x: A) => B): B {\n    return f(this.value)\n  }\n\n  get(): A {\n    throw this.value\n  }\n\n  getOrElse<B extends any>(b: () => B): A | B {\n    return b()\n  }\n\n  orElse<B extends any>(b: Try<B>): Try<A> | Try<B> {\n    return b\n  }\n\n  flatten(): Try<A> {\n    return this\n  }\n\n  forEach(fn: (a: A) => any): void {\n    // noop\n  }\n\n  filter(p: (a: A) => boolean): Try<A> {\n    return this\n  }\n\n  recover<B extends any>(pf: (x: Error) => Try<B>): Try<B> {\n    try {\n      return pf(this.value)\n    } catch (err) {\n      return new Failure<B>(err)\n    }\n  }\n\n  failed(): Try<A> | Try<Error> {\n    return new Success<Error>(this.value)\n  }\n\n  ap<B extends any>(fa: Try<(a: A) => B>): Try<B> {\n    return new Failure<B>(this.value)\n  }\n}\n\nexport type Try<A> = Success<A> | Failure<A>\n\nexport function Try<A>(value: () => A): Try<A> {\n  return Try.apply(value)\n}\n\n/* istanbul ignore next */\nexport namespace Try {\n  export function success<A>(value: A): Try<A> {\n    return new Success<A>(value)\n  }\n\n  export function failure<A>(value: Error): Try<A> {\n    return new Failure<A>(value)\n  }\n\n  export function apply<A>(value: () => A): Try<A> {\n    try {\n      return new Success<A>(value())\n    } catch (err) {\n      return new Failure<A>(err)\n    }\n  }\n\n  export function of<A>(value: A): Try<A> {\n    try {\n    return new Success<A>((() => value)())\n    } catch (err) {\n      return new Failure<A>(err)\n    }\n  }\n\n\n  export function isSuccess<A>(a: Try<A>): boolean {\n    return a.isSuccess\n  }\n\n  export function isFailure<A>(a: Try<A>): boolean {\n    return a.isFailure\n  }\n\n  export function flatMap<A, B>(f: (x: A) => Try<B>, a: Try<A>): Try<B> {\n    return a.flatMap(f)\n  }\n\n  export function map<A, B>(f: (x: A) => B, a: Try<A>): Try<B> {\n    return a.map(f)\n  }\n\n  export function fold<A, B>(f: (x: Error) => B, s: (x: A) => B, a: Try<A>): B {\n    return a.fold(f, s)\n  }\n\n  export function get<A>(a: Try<A>): A {\n    return a.get()\n  }\n\n  export function getOrElse<A, B>(b: () => B, a: Try<A>): A | B {\n    return a.getOrElse(b)\n  }\n\n  export function orElse<A, B>(b: Try<B>, a: Try<A>): Try<A> | Try<B> {\n    return a.orElse(b)\n  }\n\n  export function flatten<A>(a: Try<A>): Try<A> {\n    return a.flatten()\n  }\n\n  export function forEach<A>(fn: (a: A) => any, a: Try<A>): void {\n    return a.forEach(fn)\n  }\n\n  export function filter<A>(p: (a: A) => boolean, a: Try<A>): Try<A> {\n    return a.filter(p)\n  }\n\n  export function recover<A, B>(pf: (x: Error) => Try<B>, a: Try<A>): Try<B> {\n    return a.recover(pf)\n  }\n\n  export function failed<A>(a: Try<A>): Try<A> | Try<Error> {\n    return a.failed()\n  }\n\n  export function ap<A, B>(f: Try<(a: A) => B>, a: Try<A>): Try<B> {\n    return a.ap(f)\n  }\n}\n","'use strict'\n\nimport Functor from '../Functor'\n\nexport class ReaderM<A, Config extends any> implements Functor<A, any, Reader<A, Config>>{\n  readonly type: string = 'Reader'\n  readonly value: (a: Config) => A\n\n  constructor(value: (a: Config) => A) {\n    this.value = value\n    return this\n  }\n\n  run(config: Config): A {\n    return this.value(config)\n  }\n\n  get(config: Config): A {\n    return this.run(config)\n  }\n\n  map<B>(f: (x: A) => B): Reader<B, Config> {\n    return new ReaderM(a => f(this.run(a)))\n  }\n\n  flatMap<B>(f: (x: A) => Reader<B, Config>): Reader<B, Config> {\n    return new ReaderM((a: Config): B => f(this.run(a)).run(a))\n  }\n\n  ap<B>(fa: Reader<(a: A) => B, undefined>): Reader<B, Config> {\n    return this.map<B>(fa.get(undefined))\n  }\n\n  zip<B extends A>(other: Reader<A, Config>): Reader<B[], Config> {\n    return this.flatMap((a: A) => other.map((b: A) => [a as B, b as B]))\n  }\n}\n\nexport type Reader<A, Config extends any> = ReaderM<A, Config>\n\nexport function Reader<A, Config>(value: (a: Config) => A): ReaderM<A, Config> {\n  return Reader.apply(value)\n}\n\n/* istanbul ignore next */\nexport namespace Reader {\n  export function of<A>(value: A): ReaderM<A, undefined> {\n    return new ReaderM<A, undefined>(() => value)\n  }\n\n  export function apply<A, Config>(fn: (a: Config) => A): ReaderM<A, Config> {\n    return new ReaderM<A, Config>(fn)\n  }\n\n  export function run<A, Config>(config: Config, r: Reader<A, Config>): A {\n    return r.run(config)\n  }\n\n  export function get<A, Config>(config: Config, r: Reader<A, Config>): A {\n    return r.get(config)\n  }\n\n  export function map<A, B, Config>(f: (x: A) => B, r: Reader<A, Config>): Reader<B, Config> {\n    return r.map(f)\n  }\n\n  export function flatMap<A, B, Config>(\n    f: (x: A) => Reader<B, Config>,\n    r: Reader<A, Config>\n  ): Reader<B, Config> {\n    return r.flatMap(f)\n  }\n\n  export function ap<A, B, Config>(\n    fa: Reader<(c: A) => B, undefined>,\n    r: Reader<A, Config>\n  ): Reader<B, Config> {\n    return r.ap(fa)\n  }\n\n  export function zip<A, B extends A, Config>(\n    other: Reader<A, Config>,\n    r: Reader<A, Config>\n  ): Reader<B[], Config> {\n    return r.flatMap((a: A) => other.map((b: A) => [a as B, b as B]))\n  }\n\n\n}\n","'use strict'\nimport { Option } from '../Option'\nimport Functor from '../Functor'\n\nconst leftProjection = <A, B>(that: Either<A, B>) => ({\n  get: () => {\n    if (that.isLeft) {\n      return that.value\n    }\n    throw new Error('Unsupported operation')\n  },\n  getOrElse: <A1, B1>(x: Either<A1, B1>): Either<A1, B1> => {\n    if (that.isLeft) {\n      return that as unknown as Either<A1, B1>\n    }\n    return x\n  },\n  fold: <C>(l: (a: A) => C, r: (b: B) => C): C => {\n    if (that.isLeft) {\n      return l(that.value as A)\n    } else {\n      return r(that.value as B)\n    }\n  },\n  map: <A1>(f: (a: A) => A1): Either<A1, B> => {\n    if (that.isLeft) {\n      return Left(f(that.value as A)).left\n    }\n    return that as unknown as Either<A1, B>\n  },\n  flatMap: <A1, B1>(f: (a: A) => Either<A1, B1>): Either<A1, B1> => {\n    if (that.isLeft) {\n      return f(that.value as A)\n    }\n    return that as unknown as Either<A1, B1>\n  },\n  forEach: (f: (a: A) => void): void => {\n    if (that.isLeft) {\n      f(that.value as A)\n    }\n  },\n  forAll: (p: (a: A) => boolean): boolean => {\n    if (that.isLeft) {\n      return p(that.value as A)\n    }\n    return true\n  },\n  exists: (p: (a: A) => boolean): boolean => {\n    if (that.isLeft) {\n      return p(that.value as A)\n    }\n    return false\n  },\n  toList: (): A[] => {\n    if(that.isLeft){\n      return [that.value as A]\n    }\n    return []\n  },\n  filter: (p: (a: A) => boolean): Option<Either<A, B>> => {\n    if (that.isLeft && p(that.value as A)) {\n      return Option.some(that)\n    }\n    return Option.none()\n  },\n  isRight: that.isRight,\n  isLeft: that.isLeft\n})\n\nconst rightProjection = <A, B>(that: Either<A, B>) => ({\n  get: () => {\n    if (that.isRight) {\n      return that.value\n    }\n    throw new Error('Unsupported operation')\n  },\n  getOrElse: <A1, B1>(x: Either<A1, B1>): Either<A1, B1> => {\n    if (that.isRight) {\n      return that as unknown as Either<A1, B1>\n    }\n    return x\n  },\n  fold: <C>(l: (a: A) => C, r: (b: B) => C): C => {\n    if (that.isRight) {\n      return r(that.value as B)\n    } else {\n      return l(that.value as A)\n    }\n  },\n  map: <B1>(f: (b: B) => B1): Either<A, B1> => {\n    if (that.isRight) {\n      return Right(f(that.value as B))\n    }\n    return that as unknown as Either<A, B1>\n  },\n  flatMap: <A1, B1>(f: (b: B) => Either<A1, B1>): Either<A1, B1> => {\n    if (that.isRight) {\n      return f(that.value as B)\n    }\n    return that as unknown as Either<A1, B1>\n  },\n  forEach: (f: (b: B) => void): void => {\n    if (that.isRight) {\n      f(that.value as B)\n    }\n  },\n  forAll: (p: (b: B) => boolean): boolean => {\n    if (that.isRight) {\n      return p(that.value as B)\n    }\n    return true\n  },\n  exists: (p: (b: B) => boolean): boolean => {\n    if (that.isRight) {\n      return p(that.value as B)\n    }\n    return false\n  },\n  toList: (): A[] => {\n    if(that.isRight){\n      return [that.value as A]\n    }\n    return []\n  },\n  filter: (p: (a: A) => boolean): Option<Either<A, B>> => {\n    if (that.isRight && p(that.value as A)) {\n      return Option.some(that)\n    }\n    return Option.none()\n  },\n  isRight: that.isRight,\n  isLeft: that.isLeft\n})\n\nexport class RightM<A, B> implements Functor<A, B, Either<A,B>>{\n  readonly type: string = 'Right'\n  readonly value: B\n  readonly isRight: boolean = true\n  readonly isLeft: boolean = false\n\n  constructor(value: B) {\n    this.value = value\n    return this\n  }\n\n  left: any = leftProjection(this)\n  right: any = rightProjection(this)\n\n  get = this.right.get\n  fold = this.right.fold\n  map = this.right.map\n  flatMap = this.right.flatMap\n  forEach = this.right.forEach\n  getOrElse = this.right.getOrElse\n  forAll = this.right.forAll\n  exists = this.right.exists\n  toList = this.right.toList\n  filter = this.right.filter\n\n  swap(): Either<B, A> {\n    return Left<B, A>(this.value)\n  }\n\n}\n\nexport class LeftM<A, B>  implements Functor<A, B, Either<A,B>>{\n  readonly type: string = 'Left'\n  readonly value: A\n  readonly isRight: boolean = false\n  readonly isLeft: boolean = true\n\n  constructor(value: A) {\n    this.value = value\n    return this\n  }\n\n  left: any = leftProjection(this)\n  right: any = rightProjection(this)\n\n  get = this.right.get\n  fold = this.right.fold\n  map = this.right.map\n  flatMap = this.right.flatMap\n  forEach = this.right.forEach\n  getOrElse = this.right.getOrElse\n  forAll = this.right.forAll\n  exists = this.right.exists\n  toList = this.right.toList\n  filter = this.right.filter\n\n  swap(): Either<B, A> {\n    return Right<B, A>(this.value)\n  }\n\n}\n\nexport function Right<A, B>(value: B): Either<A, B> {\n  return Either.apply<A, B>(value)\n}\n\nexport function Left<A, B>(value: A): Either<A, B> {\n  return new LeftM<A, B>(value)\n}\n\nexport type Left<A, B> = LeftM<A, B>\nexport type Right<A, B> = RightM<A, B>\nexport type Either<A, B> = Left<A, B> | Right<A, B>\n\nexport namespace Either {\n  export function apply<A, B>(value: B): Either<A, B> {\n    return new RightM<A, B>(value)\n  }\n\n  export function of<A, B>(value: B): Either<A, B> {\n    return new RightM<A, B>(value)\n  }\n\n  export function get<A, B>(e: Either<A, B>): A | B {\n    return e.get()\n  }\n\n  export function fold<A, B, C>(l: (a: A) => C, r: (b: B) => C, e: Either<A, B>): C {\n    return e.fold(l, r)\n  }\n\n  export function map<A, B, C>(f: (x: A | B) => C, e: Either<A, B>): Either<A, C> | Either<C, A> {\n    return e.map(f)\n  }\n\n  export function flatMap<A, B, A1, B1>(f: (a: A) => Either<A1, B1>, e: Either<A, B>): Either<A1, B1> {\n    return e.flatMap(f)\n  }\n\n  export function swap<A, B>(e: Either<A, B>): Either<B, A> {\n    return e.swap()\n  }\n\n  export function forEach<A, B, C>(f: (x: A | B) => void, e: Either<A, B>): void {\n    e.forEach(f)\n  }\n\n  export function getOrElse<A, B, A1, B1>(x: Either<A1, B1>, e: Either<A, B>): Either<A1, B1> {\n    return e.getOrElse(x)\n  }\n\n  export function forAll<A, B>(p: (b: B) => boolean, e: Either<A, B>): boolean {\n    return e.forAll(p)\n  }\n\n  export function exists<A, B>(p: (b: B) => boolean, e: Either<A, B>): boolean {\n    return e.exists(p)\n  }\n\n  export function toList<A, B>(e: Either<A, B>): B[] | A[] {\n    return e.toList()\n  }\n\n  export function filter<A, B>(p: (a: A) => boolean, e: Either<A, B>): Option<Either<A, B>> {\n    return e.filter(p)\n  }\n\n}\n"],"names":["Either"],"mappings":"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"}