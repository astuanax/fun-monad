{"version":3,"file":"fun-monads.es5.js","sources":["../src/Option/index.ts"],"sourcesContent":["'use strict'\n\n/**\n * Class `None<A>` represents non-existent values of type `A`.\n *\n * ```typescript\n * const s: None<any> = new None<any>()\n * const t: None<any> = Option.none\n * const u: None<any> = Option(null)\n * const v: None<any> = Option(undefined)\n * const w: None<any> = Option.some(null)\n * const x: None<any> = Option.some(undefined)\n * const y: None<any> = Option.apply(null)\n * const z: None<any> = Option.apply(undefined)\n * ```\n */\nexport class None<A> {\n  readonly type: string = 'None'\n\n  /**\n   * Returns true if the option is None, false otherwise.\n   */\n  isNone(): boolean {\n    return true\n  }\n\n  /**\n   * Returns true if the option is an instance of Some, false otherwise.\n   */\n  isSome(): boolean {\n    return false\n  }\n\n  /**\n   * isEmpty is a convenience shortcut to {@link isNone}\n   */\n  isEmpty = this.isNone\n\n  /**\n   * isSome is a convenience shortcut to {@link isSome}\n   */\n  isDefined = this.isSome\n\n  /**\n   * get throws an Error if this is a None\n   */\n  get(): A {\n    throw new Error('Unsupported operation None.get')\n  }\n\n  /** Returns a Some containing the result of applying $f to this $option's\n   * value if this $option is nonempty.\n   * Otherwise return $none.\n   *\n   *  ```typescript\n   *  const f = (x:number): number => x * 2;\n   *  const o = Option<number>(5)\n   *  const result = o.map(f).getOrElse(-1) // 10\n   *  ```\n   *\n   *  @note This is similar to `flatMap` except here,\n   *  $f does not need to wrap its result in an $option.\n   *\n   *  @see {@link flatMap}\n   *  @see {@link forEach}\n   */\n  map<B>(f: (a: A) => B): Option<B> {\n    return new None<B>()\n  }\n\n  /** Returns the result of applying $f to this Option's value if\n   * this Option is nonempty.\n   * Returns None if this Option is empty.\n   * Slightly different from `map` in that $f is expected to\n   * return an Option (which could be None).\n   *\n   *  ```typescript\n   *  const f = (x:number) => Option(undefined);\n   *  const o = Option<number>(5)\n   *  const result = o.flatMap(f).getOrElse(-1) // -1\n   *  ```\n   *\n   *  @param  f   the function to apply\n   *  @return Returns None in all cases\n   *  @see {@link map}\n   *  @see {@link forEach}\n   */\n  flatMap<B>(f: (a: A) => Option<B>): Option<B> {\n    return new None<B>()\n  }\n\n  getOrElse(x: A): A {\n    return x\n  }\n\n  flatten(): Option<A> {\n    return new None<A>()\n  }\n\n  orElse<B>(b: Option<B>): Option<A> | Option<B> {\n    return b\n  }\n\n  toList(): A[] {\n    return []\n  }\n\n  ap<B>(fa: Option<(a: A) => B>): Option<B> {\n    return new None<B>()\n  }\n\n  filter(p: (a: A) => boolean): Option<A> {\n    return new None<A>()\n  }\n\n  has(p: (a: A) => boolean): boolean {\n    return false\n  }\n\n  exists = this.has\n\n  forEach(fn: (a: A) => any): void {\n    // noop\n  }\n\n}\n\n\n/**\n * Class `Some<A>` represents existing values of type `A`.\n * Some never contains null or undefined.\n *\n * ```typescript\n * const a:any = \"anything\"\n * const b: Some<any> = new Some<any>(a)\n * const c: Some<any> = Option.some(a)\n * const d: Some<any> = Option(a)\n * const e: Some<any> = Option.some(a)\n * const f: Some<any> = Option.apply(a)\n * ```\n */\nexport class Some<A> {\n  readonly type: string = 'Some'\n  readonly value: A\n\n  constructor(value: A) {\n    this.value = value\n    if (this.value == null) {\n      throw new Error('null or undefined exception. Please use Option.apply')\n    }\n    return this\n  }\n\n  isNone(): boolean {\n    return false\n  }\n\n  isSome(): boolean {\n    return true\n  }\n\n  isEmpty = this.isNone\n  isDefined = this.isSome\n\n  get(): A {\n    return this.value\n  }\n\n  map<B>(f: (a: A) => B): Option<B> {\n    const res = f(this.value)\n    return res == null\n      ? new None<B>()\n      : new Some<B>(res)\n  }\n\n  flatMap<B>(f: (x: A) => Option<B>): Option<B> {\n    return f(this.value)\n  }\n\n  getOrElse(x: A): A {\n    return this.get()\n  }\n\n  flatten(): Option<A> {\n    if (this.value instanceof Option) {\n      return this.value as unknown as Option<A>\n    } else {\n      return this\n    }\n  }\n\n  orElse<B>(b: Option<B>): Option<A> | Option<B> {\n    return this\n  }\n\n  toList(): A[] {\n    return [this.get()]\n  }\n\n  ap<B>(fa: Option<(a: A) => B>): Option<B> {\n    return this.map<B>(fa.get())\n  }\n\n  filter(p: (a: A) => boolean): Option<A> {\n    return p(this.get())\n      ? this\n      : new None<A>()\n  }\n\n  has(p: (a: A) => boolean): boolean {\n    return p(this.get())\n  }\n\n  exists = this.has\n\n  forEach(fn: (a: A) => any): void {\n    fn(this.get())\n  }\n}\n\nexport type Option<A> = None<A> | Some<A>\n\nexport function Option<A>(value: A): Option<A> {\n  return Option.apply(value)\n}\n\nexport namespace Option {\n  export function none<A>(): Option<A> {\n    return new None<A>()\n  }\n\n  export const empty = none\n\n  export function some<A>(a: A): Option<A> {\n    return a == null ? new None<A>() : new Some(a)\n  }\n\n  export function apply<A>(a: A): Option<A> {\n    return some(a)\n  }\n\n  export function isSome<A>(fa: Option<A>): boolean {\n    return fa.isSome()\n  }\n\n  export function isNone<A>(fa: Option<A>): boolean {\n    return fa.isNone()\n  }\n\n  export const isEmpty = isNone\n  export const isDefined = isSome\n\n  export function get<A>(a: Option<A>): A {\n    return a.get()\n  }\n\n  export function map<A, B>(f: (x: A) => B, a: Option<A>): Option<B> {\n    return a.map(f)\n  }\n\n  export function flatMap<A, B>(f: (x: A) => Option<B>, a: Option<A>): Option<B> {\n    return a.flatMap(f)\n  }\n\n  export function getOrElse<A>(x: A, a: Option<A>): A {\n    return a.getOrElse(x)\n  }\n\n  export function flatten<A>(a: Option<Option<A>>): Option<A> {\n    return a.getOrElse(new None<A>())\n  }\n\n  export function ap<A, B>(f: Option<(a: A) => B>, a: Option<A>): Option<B> {\n    return a.ap(f)\n  }\n\n  export function filter<A>(p: (a: A) => boolean, a: Option<A>): Option<A> {\n    return a.filter(p)\n  }\n\n  export function has<A>(p: (a: A) => boolean, a: Option<A>): boolean {\n    return a.has(p)\n  }\n\n  export const exists = has\n\n  export function forEach<A>(f: (a: A) => any, a: Option<A>): void {\n    a.forEach(f)\n  }\n\n  export function orElse<A, B>(b: Option<B>, a: Option<A>): Option<A> | Option<B> {\n    return a.orElse(b)\n  }\n\n}\n\n\n\n\n"],"names":[],"mappings":"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"}